function varargout = SmoveGUI(varargin)
%Global variables
global pathJump;
pathJump = 'Dados de exemplo/salto_exemplo_4m.xls';

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @SmoveGUI_OpeningFcn, ...
                   'gui_OutputFcn',  @SmoveGUI_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT



%----------------------------------------------//-------------------------------------------------




% --- Executes just before SmoveGUI is made visible.
function SmoveGUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to SmoveGUI (see VARARGIN)

% Choose default command line output for SmoveGUI
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);


% UIWAIT makes SmoveGUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);

% --- Outputs from this function are returned to the command line.
function varargout = SmoveGUI_OutputFcn(hObject, eventdata, handles) 
varargout{1} = handles.output;

% -----------------------------------------///------------------------------------------------


% % --- Executes on button press in rawButton.
% function rawButton_Callback(hObject, eventdata, handles)


% --- Botão Dados Brutos.
function rawData_Callback(hObject, eventdata, handles)
global pathJump;

%Puxa os Excel
dataSheet = xlsread(pathJump, 'dados');

%Puxa e manipula os dados
dadosAccX = dataSheet(:,1);
dadosAccX2 = dataSheet(:,2);
dadosAccX3 = dataSheet(:,3);

%Plota 

accXGraph = findobj('Tag', 'accBruto');
hold on
plot (accXGraph, dadosAccX, 'g')
plot (accXGraph, dadosAccX2, 'r')
plot (accXGraph, dadosAccX3, 'b')
legend ('AccX', 'AccY', 'AccZ')
hold off

% --- Executes on button press in filterButtom.
function filterButtom_Callback(hObject, eventdata, handles)
generateGraphic()

%Caixa de diálogo
%FirstBox = inputdlg({'Email', 'Senha'}, 'Login', [1 50;1 50]);
%Menu = menu('Avaliações','Salto','Marcha');
%Arquivo = uigetfile('*xls');
%Selecao = uiputfile ();

% --- Executes on button press in checkbox2.
function checkbox2_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox2


% --- Executes on button press in checkbox3.
function checkbox3_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox3


% --- Executes on button press in checkbox4.
function checkbox4_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox4

function generateGraphic(name)
global pathJump;

%Puxa os Excel
dataSheet = xlsread(pathJump, name);
% Puxar dados numéricos, caracteres e outros
[a, infoSheet, c] = xlsread(pathJump, 'sobre');

%Puxa os dados
dadosAccX = dataSheet(:,1);
dadosAccX2 = dataSheet(:,2);
dadosAccX3 = dataSheet(:,3);

% Transformar caracteres em números
frequency = str2double(infoSheet(4,2));

%Filtro
filterOrder = 6;
Fc = 6;
[b, a] = butter(filterOrder,Fc/(frequency/2),'low');
result = filter(b,a,dadosAccX);
result2 = filter(b,a,dadosAccX2);
result3 = filter(b,a,dadosAccX3);


axes4 = findobj('Tag', 'axes4');
hold on
plot (axes4, result, 'g')
plot (axes4, result2, 'r')
plot (axes4, result3, 'b')
legend ('AccX', 'AccY', 'AccZ')
hold off
